{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://knot.space/schemas/dependency-config.json",
  "title": "Knot Dependency Configuration Schema",
  "description": "Comprehensive schema for Knot's inter-package dependency system",
  "type": "object",
  "definitions": {
    "semverRange": {
      "type": "string",
      "pattern": "^(\\^|~|>=|<=|>|<|=)?[0-9]+\\.[0-9]+\\.[0-9]+(-[a-zA-Z0-9-]+)?(\\+[a-zA-Z0-9-]+)?$|^(\\^|~|>=|<=|>|<)?[0-9]+\\.[0-9]+\\.[0-9]+(\\s+\\|\\|\\s+(\\^|~|>=|<=|>|<|=)?[0-9]+\\.[0-9]+\\.[0-9]+)*$",
      "examples": ["1.0.0", "^1.2.3", "~2.1.0", ">=1.0.0 <2.0.0", "1.0.0 || 2.0.0"]
    },
    "packageReference": {
      "oneOf": [
        {
          "type": "string",
          "description": "Simple package name or scoped name"
        },
        {
          "type": "object",
          "description": "Detailed package dependency configuration",
          "required": ["name"],
          "properties": {
            "name": {
              "type": "string",
              "description": "Package name"
            },
            "version": {
              "$ref": "#/definitions/semverRange",
              "description": "Version constraint"
            },
            "source": {
              "type": "string",
              "enum": ["local", "space", "npm", "git"],
              "description": "Package source type"
            },
            "registry": {
              "type": "string",
              "description": "Custom registry URL for space/npm packages"
            },
            "path": {
              "type": "string",
              "description": "Relative path for local packages or git repository URL"
            },
            "optional": {
              "type": "boolean",
              "default": false,
              "description": "Whether this dependency is optional"
            },
            "peer": {
              "type": "boolean",
              "default": false,
              "description": "Whether this is a peer dependency"
            },
            "dev": {
              "type": "boolean",
              "default": false,
              "description": "Whether this is a development dependency"
            },
            "conditions": {
              "$ref": "#/definitions/dependencyConditions",
              "description": "Conditional dependency based on environment/platform"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "dependencyConditions": {
      "type": "object",
      "description": "Conditions under which this dependency should be included",
      "properties": {
        "platform": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["darwin", "linux", "win32", "freebsd", "openbsd", "android", "aix", "sunos"]
          },
          "description": "Platforms where this dependency is needed"
        },
        "arch": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["x64", "arm64", "ia32", "arm", "s390x", "ppc64", "mips", "mipsel"]
          },
          "description": "CPU architectures where this dependency is needed"
        },
        "node": {
          "$ref": "#/definitions/semverRange",
          "description": "Node.js version requirement"
        },
        "env": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["development", "production", "test", "staging"]
          },
          "description": "Environments where this dependency is needed"
        },
        "features": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required features for this dependency"
        }
      },
      "additionalProperties": false
    },
    "dependencyGroup": {
      "type": "object",
      "properties": {
        "dependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/packageReference"
          },
          "description": "Production dependencies"
        },
        "devDependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/packageReference"
          },
          "description": "Development dependencies"
        },
        "peerDependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/packageReference"
          },
          "description": "Peer dependencies"
        },
        "optionalDependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/packageReference"
          },
          "description": "Optional dependencies"
        }
      },
      "additionalProperties": false
    },
    "resolutionStrategy": {
      "type": "object",
      "properties": {
        "strategy": {
          "type": "string",
          "enum": ["highest", "lowest", "exact", "workspace"],
          "default": "highest",
          "description": "Version resolution strategy"
        },
        "allowPrereleases": {
          "type": "boolean",
          "default": false,
          "description": "Allow prerelease versions"
        },
        "preferLocal": {
          "type": "boolean",
          "default": true,
          "description": "Prefer local workspace packages over external"
        },
        "dedupe": {
          "type": "boolean",
          "default": true,
          "description": "Deduplicate identical versions"
        }
      },
      "additionalProperties": false
    },
    "registryConfig": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Registry URL"
        },
        "token": {
          "type": "string",
          "description": "Authentication token"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Package scopes handled by this registry"
        },
        "priority": {
          "type": "integer",
          "minimum": 0,
          "default": 100,
          "description": "Registry priority (lower = higher priority)"
        }
      },
      "required": ["url"],
      "additionalProperties": false
    }
  },
  "properties": {
    "workspace": {
      "type": "object",
      "description": "Workspace-level dependency configuration",
      "properties": {
        "resolution": {
          "$ref": "#/definitions/resolutionStrategy",
          "description": "Global resolution preferences"
        },
        "registries": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9_-]+$": {
              "$ref": "#/definitions/registryConfig"
            }
          },
          "description": "Registry configurations"
        },
        "overrides": {
          "type": "object",
          "patternProperties": {
            "^@?[a-zA-Z0-9_-]+(/[a-zA-Z0-9_-]+)?$": {
              "$ref": "#/definitions/semverRange"
            }
          },
          "description": "Force specific versions for packages"
        },
        "aliases": {
          "type": "object",
          "patternProperties": {
            "^@?[a-zA-Z0-9_-]+(/[a-zA-Z0-9_-]+)?$": {
              "type": "string"
            }
          },
          "description": "Package name aliases"
        }
      },
      "additionalProperties": false
    },
    "package": {
      "allOf": [
        {
          "$ref": "#/definitions/dependencyGroup"
        },
        {
          "type": "object",
          "description": "Package-level dependency declarations",
          "properties": {
            "exports": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Exported modules from this package"
            },
            "imports": {
              "type": "object",
              "patternProperties": {
                "^[a-zA-Z0-9_/-]+$": {
                  "type": "string"
                }
              },
              "description": "Import aliases for this package"
            }
          }
        }
      ]
    },
    "apps": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z0-9_-]+$": {
          "allOf": [
            {
              "$ref": "#/definitions/dependencyGroup"
            },
            {
              "type": "object",
              "properties": {
                "resolution": {
                  "$ref": "#/definitions/resolutionStrategy",
                  "description": "App-specific resolution preferences"
                },
                "tsAlias": {
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "TypeScript path alias configuration"
                }
              }
            }
          ]
        }
      },
      "description": "App-specific dependency configurations"
    }
  },
  "additionalProperties": false
}