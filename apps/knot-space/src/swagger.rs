use utoipa::{OpenApi, ToSchema};\nuse crate::models::*;\n\n#[derive(OpenApi)]\n#[openapi(\n    paths(\n        crate::handlers::users::register,\n        crate::handlers::users::login,\n        crate::handlers::users::get_profile,\n        crate::handlers::users::get_user_by_username,\n        crate::handlers::teams::create_team,\n        crate::handlers::teams::list_teams,\n        crate::handlers::teams::get_team,\n        crate::handlers::teams::get_team_members,\n        crate::handlers::teams::add_team_member,\n        crate::handlers::teams::remove_team_member,\n        crate::handlers::teams::delete_team,\n        crate::handlers::packages::publish_package,\n        crate::handlers::packages::list_packages,\n        crate::handlers::packages::get_package_versions,\n        crate::handlers::packages::get_package,\n        crate::handlers::packages::download_package,\n        crate::handlers::packages::delete_package,\n    ),\n    components(\n        schemas(\n            User,\n            UserProfile,\n            CreateUserRequest,\n            LoginRequest,\n            AuthResponse,\n            Team,\n            CreateTeamRequest,\n            TeamMember,\n            AddTeamMemberRequest,\n            Package,\n            PublishPackageRequest,\n            PackageResponse,\n        )\n    ),\n    tags(\n        (name = \"auth\", description = \"User authentication endpoints\"),\n        (name = \"teams\", description = \"Team management endpoints\"),\n        (name = \"packages\", description = \"Package management endpoints\")\n    ),\n    info(\n        title = \"Knot Space API\",\n        version = \"0.1.0\",\n        description = \"Online repository server for Knot packages\",\n        contact(\n            name = \"Knot Team\",\n            url = \"https://github.com/saravenpi/knot\"\n        )\n    ),\n    servers(\n        (url = \"http://localhost:8000\", description = \"Local development server\"),\n        (url = \"https://api.knot.space\", description = \"Production server\")\n    )\n)]\npub struct ApiDoc;\n\n// Add ToSchema derive to existing models\nimpl ToSchema<'_> for User {}\nimpl ToSchema<'_> for UserProfile {}\nimpl ToSchema<'_> for CreateUserRequest {}\nimpl ToSchema<'_> for LoginRequest {}\nimpl ToSchema<'_> for AuthResponse {}\nimpl ToSchema<'_> for Team {}\nimpl ToSchema<'_> for CreateTeamRequest {}\nimpl ToSchema<'_> for TeamMember {}\nimpl ToSchema<'_> for AddTeamMemberRequest {}\nimpl ToSchema<'_> for Package {}\nimpl ToSchema<'_> for PublishPackageRequest {}\nimpl ToSchema<'_> for PackageResponse {}